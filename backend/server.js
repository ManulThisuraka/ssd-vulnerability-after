const express = require("express");
const mongoose = require("mongoose");
const bodyParser = require("body-parser");
const cors = require("cors");
const path = require("path");
const dotenv = require("dotenv");
const helmet = require("helmet");
const csrf = require("csurf");

const csrfProtection = csrf({ cookie: true });
const app = express();
dotenv.config();
app.use(cors());

app.get("/transfer", csrfProtection, (req, res) => {
  res.send(`
  <html>
  <form id="myForm" action="/transfer" method="POST" target="_blank">
  Account:<input type="text" name="account" value="your friend"/><br/>
  Amount:<input type="text" name="amount" value="$5000"/>
  <input type="hidden" name="_csrf" value="${req.csrfToken()}"/>
    <button type="submit">Transfer Money</button>
  </form>
  </html>
  `);
});

app.post("/transfer", csrfProtection, (req, res) => {
  console.log(req.body);
  if (isAuthenticated(req.cookies["session"])) {
    // Transfer money and insert data in the database
    console.info("Transferring Money...");
    res.send("OK");
  } else {
    res.status(400).send("Bad Request");
  }
});

const isAuthenticated = (session) => {
  // We should check session in a store or something like that
  return session === "valid_user";
};

app.use(bodyParser.json());
const PORT = process.env.PORT || 8070;
const URL = process.env.MONGODB_URL;

app.use(bodyParser.json({ limit: "30mb", extended: true }));
app.use(bodyParser.urlencoded({ limit: "30mb", extended: true }));
const productRouter = require("./routes/productRoutes");

mongoose.connect(URL, {
  useCreateIndex: true,
  useNewUrlParser: true,
  useUnifiedTopology: true,
  useFindAndModify: false,
});

const connection = mongoose.connection;

connection.once("open", () => {
  console.log("Mongo DB Connection success");
});

app.use(
  helmet({
    contentSecurityPolicy: {
      directives: {
        scriptSrc: ["'self'", (req, res) => `'nonce-${res.locals.cspNonce}'`],
      },
    },
  })
);

const userRouter = require("./src/routes/User");
app.use("/user", userRouter);

app.route("/").get((req, res) => {
  res.send("SLIIT SPM");
});

const RiderAPI = require("./API/Rider.Api.js");
app.use("/rider", RiderAPI());

const OrderAPI = require("./API/Order.Api.js");
app.use("/order", OrderAPI());

const CompleteOrderAPI = require("./API/completeOrder.Api");
app.use("/complete", CompleteOrderAPI());

const PaymentAPI = require("./API/Payment.Api");
app.use("/make", PaymentAPI());

const WishlistItems = require("./routes/wishlistRouter");
app.use("/wishlist", WishlistItems);

app.use("/product", productRouter);

const CartItems = require("./routes/cartRouter");
const { log } = require("nodemon/lib/utils");
app.use("/cart", CartItems);

const Coupons = require("./routes/couponRoute");
app.use("/coupon", Coupons);

const Notifications = require("./routes/notificationsRoute");
app.use("/notification", Notifications);

app.listen(PORT, () => {
  console.log(`Server is up and running on port ${PORT}`);
});
